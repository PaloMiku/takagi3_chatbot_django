"""
Django settings for django_chatbot project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv
from typing import Callable, Optional

# 加载 .env （存在则读取）
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

def _get_env(name: str, default: Optional[str] = None, *, cast: Optional[Callable[[str], object]] = None):
    """读取环境变量，允许提供默认值与类型转换。"""
    val = os.getenv(name, default)
    if cast and val is not None:
        try:
            return cast(val)
        except Exception:
            return default
    return val

# 生产环境请在 .env / 外部环境彻底设置 SECRET_KEY
SECRET_KEY = _get_env('SECRET_KEY', 'dev-insecure-key')
DEBUG = _get_env('DJANGO_DEBUG', 'False', cast=lambda v: v.lower() in {'1', 'true', 'yes'})
_raw_hosts = _get_env('ALLOWED_HOSTS', '127.0.0.1,localhost')
ALLOWED_HOSTS = [h.strip() for h in _raw_hosts.split(',') if h.strip()]
if DEBUG and '127.0.0.1' not in ALLOWED_HOSTS:
    ALLOWED_HOSTS.append('127.0.0.1')

# OpenAI 环境变量（在 views 中统一调用）
OPENAI_API_KEY = _get_env('OPENAI_API_KEY')
OPENAI_BASE_URL = _get_env('OPENAI_BASE_URL')  # 例如自建代理或 Azure Endpoint
OPENAI_DEFAULT_MODEL = _get_env('OPENAI_MODEL_DEFAULT', 'gpt-3.5-turbo')
# 每次构造上下文的近似 token 上限（粗略估算用字符长度换算）
TOKEN_CONTEXT_LIMIT = int(_get_env('TOKEN_CONTEXT_LIMIT', '3000'))
# SECURE_SSL_REDIRECT = True
# SECURE_HSTS_SECONDS = 2
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# SECURE_SSL_CERTIFICATE = '你的证书路径'
# SECURE_SSL_KEY = '你的私钥路径'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'chatbot',
    'channels',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_chatbot.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 只需显式指向 templates 目录
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_chatbot.wsgi.application'
ASGI_APPLICATION = 'django_chatbot.asgi.application'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',
    }
}


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/
STATIC_URL = '/static/'
# 开发源文件目录
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
# 收集后的目标目录（部署 collectstatic 使用）
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
